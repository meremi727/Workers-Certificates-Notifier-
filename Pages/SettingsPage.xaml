<Page x:Class="WpfApp1.Pages.SettingsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      mc:Ignorable="d" 
      
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      xmlns:beh="http://schemas.microsoft.com/xaml/behaviors"
      
      xmlns:mat="http://materialdesigninxaml.net/winfx/xaml/themes"
      
      xmlns:local="clr-namespace:WpfApp1"
      xmlns:viewmodels="clr-namespace:WpfApp1.ViewModels"
      xmlns:models="clr-namespace:WpfApp1.Models"
      xmlns:mvvm="clr-namespace:WpfApp1.MVVM"
      
      d:DataContext="{d:DesignInstance Type=viewmodels:SettingsPageViewModel}"
      d:DesignHeight="450" d:DesignWidth="800"
      Background="{StaticResource MaterialDesignBackground}"
      Title="SettingsPage">
    <Page.Resources>
        <!--#region EnumsProviders -->
        <ObjectDataProvider x:Key="NotificationsIntervalProvider"
                            ObjectType="{x:Type sys:Enum}"
                            MethodName="GetValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:NotificationsInterval" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="ToastNotificationsIntervalProvider"
                            ObjectType="{x:Type sys:Enum}"
                            MethodName="GetValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:ToastNotificationInterval" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="ThemeProvider"
                            ObjectType="{x:Type sys:Enum}"
                            MethodName="GetValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:Themes" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <!--#endregion-->

        <!--#region Converters -->
        <mvvm:EnumDescriptionConverter x:Key="enumDescriptionConverter"/>
        <!--#endregion-->

        <!--#region TextBlock Styles -->
        <Style x:Key="TextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignTextBlock}">
            <Setter Property="Foreground"           Value="{StaticResource MaterialDesignDarkForeground}" />
            <Setter Property="FontSize"             Value="16" />
            <Setter Property="HorizontalAlignment"  Value="Left" />
            <Setter Property="VerticalAlignment"    Value="Center" />
            <Setter Property="DockPanel.Dock"       Value="Left" />
            <Setter Property="TextWrapping"         Value="Wrap" />
            <Setter Property="MaxWidth"             Value="300" />
        </Style>

        <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockStyle}" />
        <!--#endregion-->

        <!--#region DataTemplates -->
        <DataTemplate x:Key="ComboBoxItemDataTempalte" DataType="{x:Type sys:Enum}">
            <TextBlock Text="{Binding Converter={StaticResource enumDescriptionConverter}}" 
                       Style="{StaticResource TextBlockStyle}"/>
        </DataTemplate>
        <!--#endregion-->

        <!--#region ComboBox and ToggleButton Styles-->
        <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignComboBox}">
            <Setter Property="MinWidth"             Value="75" />
            <Setter Property="HorizontalAlignment"  Value="Right" />
            <Setter Property="DockPanel.Dock"       Value="Right" />
            <Setter Property="Padding"              Value="5" />
            <Setter Property="Margin"               Value="20 5 5 5" />
            <Setter Property="ItemTemplate" Value="{StaticResource ComboBoxItemDataTempalte}" />
        </Style>

        <Style TargetType="ToggleButton" BasedOn="{StaticResource MaterialDesignSwitchAccentToggleButton}">
            <Setter Property="MinWidth"             Value="75" />
            <Setter Property="HorizontalAlignment"  Value="Right" />
            <Setter Property="DockPanel.Dock"       Value="Right" />
        </Style>
        <!--#endregion-->
        
        <!--#region StackPanel and Card Styles -->
        <Style x:Key="MainPanelStyle" TargetType="StackPanel">
            <Setter Property="Orientation"          Value="Vertical" />
            <Setter Property="HorizontalAlignment"  Value="Center" />
            <Setter Property="VerticalAlignment"    Value="Top" />
            <Setter Property="Margin"               Value="20" />
        </Style>

        <Style TargetType="mat:Card">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="10 5 10 5" />
        </Style>
        <!--#endregion-->
    </Page.Resources>
    <mat:Card Margin="20" 
              VerticalAlignment="Top" 
              HorizontalAlignment="Center"
              Background="{StaticResource PrimaryHueDarkBrush}">
        <StackPanel Style="{StaticResource MainPanelStyle}">
            <mat:Card x:Name="NotificationsEnabledCard">
                <DockPanel>
                    <TextBlock Text="Уведомления"/>
                    <ToggleButton x:Name="NotificationsToggleButton"
                              DataContext="{x:Static local:AppSettings.Settings}"
                              IsChecked="{Binding NotificationsEnabled}" />
                </DockPanel>
            </mat:Card>

            <mat:Card x:Name="NotificationIntervalCard"
                  IsEnabled="{Binding ElementName=NotificationsToggleButton, 
                                      Path=IsChecked}">
                <DockPanel>
                    <TextBlock Text="Предупреждать за" />
                    <ComboBox x:Name="NotificationIntervalComboBox"
                          ItemsSource="{Binding Source={StaticResource NotificationsIntervalProvider}}"
                          IsTextSearchEnabled="True"
                          SelectedValue="{Binding Source={x:Static local:AppSettings.Settings}, Path=Interval}">
                        <beh:Interaction.Triggers>
                            <beh:EventTrigger EventName="SelectionChanged">
                                <beh:InvokeCommandAction Command="{Binding Commands.ChangeInterval}"
                                                     CommandParameter="{Binding ElementName=NotificationIntervalComboBox, 
                                                                                Path=SelectedValue}"/>
                            </beh:EventTrigger>
                        </beh:Interaction.Triggers>
                    </ComboBox>
                </DockPanel>
            </mat:Card>

            <mat:Card x:Name="ToastNotificationIntervalCard"
                  IsEnabled="{Binding ElementName=NotificationsToggleButton, 
                                      Path=IsChecked}">
                <DockPanel>
                    <TextBlock Text="Интервалы уведомлений" />
                    <ComboBox x:Name="ToastNotificationIntervalComboBox"
                          ItemsSource="{Binding Source={StaticResource ToastNotificationsIntervalProvider}}"
                          IsTextSearchEnabled="True"
                          SelectedValue="{Binding Source={x:Static local:AppSettings.Settings}, Path=ToastInterval}" />
                </DockPanel>
            </mat:Card>

            <mat:Card x:Name="MarkBadWorkersCard">
                <DockPanel>
                    <TextBlock Text="Выделение цветом работников, с истекающими удостоверениями"/>
                    <ToggleButton  x:Name="MarkWorkersToggleButton"
                               DataContext="{x:Static local:AppSettings.Settings}"
                               IsChecked="{Binding MarkWorkersWithExpiredCertificates}" />
                </DockPanel>
            </mat:Card>

            <mat:Card x:Name="ThemeSwitchingCard"
                  IsEnabled="True">
                <DockPanel>
                    <TextBlock Text="Тема (в разработке)" />
                    <ComboBox ItemsSource="{Binding Source={StaticResource ThemeProvider}}"
                          IsTextSearchEnabled="True" 
                          
                          Tag="Need to add Theeme switching in settings parameters"
                          IsEnabled="False"
                          SelectedValue="{x:Static models:Themes.Dark}"/>
                </DockPanel>
            </mat:Card>

            <mat:Card x:Name="AddToStartupCard">
                <DockPanel>
                    <TextBlock Text="Запускать вместе с системой (в разработке)"/>
                    <ToggleButton  x:Name="AddToStartupToggleButtton"
                               IsEnabled="False"
                               DataContext="{x:Static local:AppSettings.Settings}"
                               IsChecked="{Binding AddToStartup}" />
                </DockPanel>
            </mat:Card>
        </StackPanel>
    </mat:Card>
</Page>
